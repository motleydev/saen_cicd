version: "3.6"
services:
  postgres-dev-db:
    image: postgres:15
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
  postgres-meta-data:
    image: postgres:15
    restart: always
    volumes:
      - metadata_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
  graphql-engine:
    image: hasura/graphql-engine:v2.26.0
    ports:
      - "8080:8080"
    restart: always
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres-meta-data:5432/postgres
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://postgres:postgrespassword@postgres-dev-db:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      HASURA_GRAPHQL_EE_LICENSE_KEY: "eyJhbGciOiJSUzI1NiIsImtpZCI6IjEiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJIYXN1cmEiLCJzdWIiOiJEZW1vLUFaIiwiZXhwIjoxNjg4MDgzMTAyLCJpYXQiOjE2ODU0OTExMDIsImp0aSI6IjliMGQwYzU1LWYyYWItNGZjZS1hYTllLTY1ZDAwMGEwMTE1MSJ9.VAEH9IMmeLP2DOrelwsO7f8tDcVvMGf6PlzjoOOsz64MINTYaO_gH8ILgjLSoQcloOumGd3ZDOuiphS2Yx8yxUPE_Ay0Tiq3jyG5djYCD2NU3We7gK-8QHmM8myqd2zvq2u1aCq2pJIgy953-g1sBkylg3EGCzDCZw_TD7uQFycRbdY7H9oUnRcpfdw5Y3fVKTQzW_XWKhnj421DiYCXD5f4SgLwFUKXw6r9-NKE4DNHrVck2wSjOl1q9z5j6D2ft5G-kXa8a3SBEF0Dz7PIlV27H7m9ztwfJhSC4ipwn35CUw6_OnYFqT4WZrffY8wbB-GaSN6zMPnTI24u3XzjnXWzcy-5LywDmhTxNEMhiNcwkWuZF7stZBuzwNN6bj9iUUEhvxTg69rsPYZozcZsJv-nuSq9pIWU9UIe6G9OksLZwsbilPhMf1iXsPY3m1rpCZKgyGU7Ebj-MZaEWZEAqLYArBrc_mRd_NDGT2yVAQ7Y1J8qPUGvHvHZ22ylJ9gQ"
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to run console offline (i.e load console assets from server instead of CDN)
      # HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      HASURA_GRAPHQL_METADATA_DEFAULTS: '{"backend_configs":{"dataconnector":{"athena":{"uri":"http://data-connector-agent:8081/api/v1/athena"},"mariadb":{"uri":"http://data-connector-agent:8081/api/v1/mariadb"},"mysql8":{"uri":"http://data-connector-agent:8081/api/v1/mysql"},"oracle":{"uri":"http://data-connector-agent:8081/api/v1/oracle"},"snowflake":{"uri":"http://data-connector-agent:8081/api/v1/snowflake"}}}}'
    depends_on:
      data-connector-agent:
        condition: service_healthy
  data-connector-agent:
    image: hasura/graphql-data-connector:v2.23.0
    restart: always
    ports:
      - 8081:8081
    environment:
      QUARKUS_LOG_LEVEL: ERROR # FATAL, ERROR, WARN, INFO, DEBUG, TRACE
      ## https://quarkus.io/guides/opentelemetry#configuration-reference
      QUARKUS_OPENTELEMETRY_ENABLED: "false"
      ## QUARKUS_OPENTELEMETRY_TRACER_EXPORTER_OTLP_ENDPOINT: http://jaeger:4317
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/api/v1/athena/health"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 5s
volumes:
  db_data:
  metadata_data:
